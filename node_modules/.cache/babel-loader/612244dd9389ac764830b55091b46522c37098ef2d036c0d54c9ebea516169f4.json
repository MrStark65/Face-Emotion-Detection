{"ast":null,"code":"import React,{useRef,useState}from'react';import WebcamCapture from'./WebcamCapture';import EmotionDisplay from'./EmotionDisplay';import LoadingSpinner from'./LoadingSpinner';import{analyzeFace}from'../utils/faceApiHelper';import'../styles/components/EmotionDetector.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EmotionDetector=()=>{const webcamRef=useRef(null);const[emotions,setEmotions]=useState(null);const[isProcessing,setIsProcessing]=useState(false);const[error,setError]=useState(null);const captureAndAnalyze=async()=>{if(isProcessing)return;try{setIsProcessing(true);setError(null);const imageSrc=webcamRef.current.getScreenshot();const result=await analyzeFace(imageSrc);if(result.faces&&result.faces.length>0){setEmotions(result.faces[0].attributes.emotion);}else{setError('No face detected. Please try again.');}}catch(err){setError('Error processing image. Please try again.');console.error(err);}finally{setIsProcessing(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"emotion-detector\",children:[/*#__PURE__*/_jsx(WebcamCapture,{webcamRef:webcamRef}),/*#__PURE__*/_jsx(\"button\",{className:\"capture-button\",onClick:captureAndAnalyze,disabled:isProcessing,children:\"Detect Emotion\"}),isProcessing&&/*#__PURE__*/_jsx(LoadingSpinner,{}),/*#__PURE__*/_jsx(EmotionDisplay,{emotions:emotions,error:error})]});};export default EmotionDetector;","map":{"version":3,"names":["React","useRef","useState","WebcamCapture","EmotionDisplay","LoadingSpinner","analyzeFace","jsx","_jsx","jsxs","_jsxs","EmotionDetector","webcamRef","emotions","setEmotions","isProcessing","setIsProcessing","error","setError","captureAndAnalyze","imageSrc","current","getScreenshot","result","faces","length","attributes","emotion","err","console","className","children","onClick","disabled"],"sources":["D:/emotion-detection/face-emotion-detection/src/components/EmotionDetector.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport WebcamCapture from './WebcamCapture';\r\nimport EmotionDisplay from './EmotionDisplay';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport { analyzeFace } from '../utils/faceApiHelper';\r\nimport '../styles/components/EmotionDetector.css';\r\n\r\nconst EmotionDetector = () => {\r\n  const webcamRef = useRef(null);\r\n  const [emotions, setEmotions] = useState(null);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const captureAndAnalyze = async () => {\r\n    if (isProcessing) return;\r\n\r\n    try {\r\n      setIsProcessing(true);\r\n      setError(null);\r\n\r\n      const imageSrc = webcamRef.current.getScreenshot();\r\n      const result = await analyzeFace(imageSrc);\r\n\r\n      if (result.faces && result.faces.length > 0) {\r\n        setEmotions(result.faces[0].attributes.emotion);\r\n      } else {\r\n        setError('No face detected. Please try again.');\r\n      }\r\n    } catch (err) {\r\n      setError('Error processing image. Please try again.');\r\n      console.error(err);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"emotion-detector\">\r\n      <WebcamCapture webcamRef={webcamRef} />\r\n      <button \r\n        className=\"capture-button\"\r\n        onClick={captureAndAnalyze}\r\n        disabled={isProcessing}\r\n      >\r\n        Detect Emotion\r\n      </button>\r\n      {isProcessing && <LoadingSpinner />}\r\n      <EmotionDisplay emotions={emotions} error={error} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmotionDetector;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAC/C,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAC3C,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAC7C,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAC7C,OAASC,WAAW,KAAQ,wBAAwB,CACpD,MAAO,0CAA0C,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElD,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,SAAS,CAAGX,MAAM,CAAC,IAAI,CAAC,CAC9B,KAAM,CAACY,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAC9C,KAAM,CAACa,YAAY,CAAEC,eAAe,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAACe,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAAiB,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CACpC,GAAIJ,YAAY,CAAE,OAElB,GAAI,CACFC,eAAe,CAAC,IAAI,CAAC,CACrBE,QAAQ,CAAC,IAAI,CAAC,CAEd,KAAM,CAAAE,QAAQ,CAAGR,SAAS,CAACS,OAAO,CAACC,aAAa,CAAC,CAAC,CAClD,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAjB,WAAW,CAACc,QAAQ,CAAC,CAE1C,GAAIG,MAAM,CAACC,KAAK,EAAID,MAAM,CAACC,KAAK,CAACC,MAAM,CAAG,CAAC,CAAE,CAC3CX,WAAW,CAACS,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACE,UAAU,CAACC,OAAO,CAAC,CACjD,CAAC,IAAM,CACLT,QAAQ,CAAC,qCAAqC,CAAC,CACjD,CACF,CAAE,MAAOU,GAAG,CAAE,CACZV,QAAQ,CAAC,2CAA2C,CAAC,CACrDW,OAAO,CAACZ,KAAK,CAACW,GAAG,CAAC,CACpB,CAAC,OAAS,CACRZ,eAAe,CAAC,KAAK,CAAC,CACxB,CACF,CAAC,CAED,mBACEN,KAAA,QAAKoB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BvB,IAAA,CAACL,aAAa,EAACS,SAAS,CAAEA,SAAU,CAAE,CAAC,cACvCJ,IAAA,WACEsB,SAAS,CAAC,gBAAgB,CAC1BE,OAAO,CAAEb,iBAAkB,CAC3Bc,QAAQ,CAAElB,YAAa,CAAAgB,QAAA,CACxB,gBAED,CAAQ,CAAC,CACRhB,YAAY,eAAIP,IAAA,CAACH,cAAc,GAAE,CAAC,cACnCG,IAAA,CAACJ,cAAc,EAACS,QAAQ,CAAEA,QAAS,CAACI,KAAK,CAAEA,KAAM,CAAE,CAAC,EACjD,CAAC,CAEV,CAAC,CAED,cAAe,CAAAN,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}